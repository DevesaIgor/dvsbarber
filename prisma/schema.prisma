generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Estabelecimento {
  id            Int            @id @default(autoincrement())
  nome          String
  slug          String          @unique        // link Ãºnico (ex: /barbearia-do-joao)
  email         String          @unique        // usado no login
  senhaHash     String          // senha criptografada
  telefone      String?
  endereco      String?
  criadoEm      DateTime        @default(now())

  profissionais Profissional[]
  servicos      Servico[]
  clientes      Cliente[]
  agendamentos  Agendamento[]
}

model Cliente {
  id              Int             @id @default(autoincrement())
  nome            String
  telefone        String
  email           String?
  senha     String          // senha criptografada
  criadoEm        DateTime        @default(now())

  estabelecimentoId Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  agendamentos      Agendamento[]
}

model Profissional {
  id              Int             @id @default(autoincrement())
  nome            String
  especialidade   String?
  criadoEm        DateTime        @default(now())

  estabelecimentoId Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  agendamentos      Agendamento[]
}

model Servico {
  id              Int             @id @default(autoincrement())
  nome            String
  descricao       String?
  preco           Float
  duracaoMin      Int

  estabelecimentoId Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  agendamentos      Agendamento[]
}

model Agendamento {
  id              Int              @id @default(autoincrement())
  dataHora        DateTime
  status          StatusAgendamento @default(PENDENTE)
  criadoEm        DateTime          @default(now())

  clienteId       Int
  cliente         Cliente        @relation(fields: [clienteId], references: [id])

  profissionalId  Int
  profissional    Profissional   @relation(fields: [profissionalId], references: [id])

  servicoId       Int
  servico         Servico        @relation(fields: [servicoId], references: [id])

  estabelecimentoId Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
}

enum StatusAgendamento {
  PENDENTE
  CONFIRMADO
  CANCELADO
  CONCLUIDO
}
